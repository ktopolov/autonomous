# This is a basic workflow to help you get started with Actions

name: CI

# 1) CONTROL WHEN THIS WORKFLOW WILL RUN
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  DOCKER_TAG: autonomous:latest

# 2) BUILD DOCKER IMAGE AND PUSH TO DOCKER REGISTRY
jobs:
  build-and-push-docker:
    runs-on: ubuntu-latest
    steps:
      # Checkout repo under ${GITHUB_WORKSPACE}
      - name: Checkout the repo 
        uses: actions/checkout@v2

      # List contents of repo to make sure checkout is correct
      - name: List repo 
        run: ls ${GITHUB_WORKSPACE}

      # FIXME-KT: Setup CACHE so docker wont rebuild same layers always

      # Login using GitHub repo sectets (set Docker ID, password in GitHub settings/secrets)
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Echo docker tag
        run: echo ${DOCKER_TAG}

      # Final argument is the "context" directory; basically sets the CWD, so Docker can find proper folders
      - name: Build Docker
        run: docker build --file ${GITHUB_WORKSPACE}/docker/Dockerfile-dev --tag ${DOCKER_TAG} ${GITHUB_WORKSPACE}

      - name: Push Docker
        run: docker push ${DOCKER_TAG}

      # Context directory acts as working directory inside Dockerfile so it can properly access the
      # repo's files
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ${GITHUB_WORKSPACE}
          file: ${GITHUB_WORKSPACE}/docker/Dockerfile-dev
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${DOCKER_TAG}

      # - name: Build and push
      #   id: docker_build
      #   uses: docker/build-push-action@v2
      #   with:
      #     file: ${GITHUB_WORKSPACE}/docker/Dockerfile-dev
      #     # builder: ${{ steps.buildx.outputs.name }}
      #     push: true
      #     tags: ${{ secrets.DOCKER_HUB_USERNAME }}/autonomous:latest
      #     # cache-from: type=local,src=/tmp/.buildx-cache
      #     # cache-to: type=local,dest=/tmp/.buildx-cache
